version: '3.8'
name: captive_backend
services:
  captive_db:
    image: mysql:latest
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: Password1
    networks:
      - captive_network
    ports:
      - '3366:3306'
    volumes:
      - db_data:/var/lib/mysql

  captive_api_command:
    image: captive/api_command
    restart: always
    environment:
      ConnectionStrings__DefaultConnection: "Server=captive_db;Database=captive_db;Uid=root;Pwd=Password1;"
      ASPNETCORE_HTTPS_PORTS: 7443
      ASPNETCORE_URLS: https://+:7443;http://+7080
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: Password1
    networks:
      - captive_network
    volumes:
      - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    build:
      context: .
      dockerfile: ./Captive.Commands/Dockerfile
    ports:
      - '7080:7080'
      - '7443:7443'

  captive_api_query:
    image: captive/api_query
    restart: always
    environment:
      ConnectionStrings__DefaultConnection: "Server=captive_db;Database=captive_db;Uid=root;Pwd=Password1;"
      ASPNETCORE_HTTPS_PORTS: 8443
      ASPNETCORE_URLS: https://+:8443;http://+8080
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      ASPNETCORE_Kestrel__Certificates__Default__Password: Password1
    networks:
      - captive_network
    build:
      context: .
      dockerfile: ./Captive.Query/Dockerfile
    volumes:
      - ./https/aspnetapp.pfx:/https/aspnetapp.pfx:ro
    ports:
      - '8443:8443'
      - '8080:8080'
  
volumes:
  db_data:

networks:
  captive_network:
    driver: bridge